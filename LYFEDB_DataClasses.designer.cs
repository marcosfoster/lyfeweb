#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LYFEWEB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LYFE")]
	public partial class LYFEDB_DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertINGREDIENT(INGREDIENT instance);
    partial void UpdateINGREDIENT(INGREDIENT instance);
    partial void DeleteINGREDIENT(INGREDIENT instance);
    partial void InsertINGREDIENTS_PRICE(INGREDIENTS_PRICE instance);
    partial void UpdateINGREDIENTS_PRICE(INGREDIENTS_PRICE instance);
    partial void DeleteINGREDIENTS_PRICE(INGREDIENTS_PRICE instance);
    partial void InsertRECIPE_TAG(RECIPE_TAG instance);
    partial void UpdateRECIPE_TAG(RECIPE_TAG instance);
    partial void DeleteRECIPE_TAG(RECIPE_TAG instance);
    partial void InsertRECIPE(RECIPE instance);
    partial void UpdateRECIPE(RECIPE instance);
    partial void DeleteRECIPE(RECIPE instance);
    partial void InsertLIST_INGREDIENT(LIST_INGREDIENT instance);
    partial void UpdateLIST_INGREDIENT(LIST_INGREDIENT instance);
    partial void DeleteLIST_INGREDIENT(LIST_INGREDIENT instance);
    partial void InsertSHOPPING_LIST(SHOPPING_LIST instance);
    partial void UpdateSHOPPING_LIST(SHOPPING_LIST instance);
    partial void DeleteSHOPPING_LIST(SHOPPING_LIST instance);
    partial void InsertRECIPE_INGREDIENT(RECIPE_INGREDIENT instance);
    partial void UpdateRECIPE_INGREDIENT(RECIPE_INGREDIENT instance);
    partial void DeleteRECIPE_INGREDIENT(RECIPE_INGREDIENT instance);
    partial void InsertRECIPE_STEP(RECIPE_STEP instance);
    partial void UpdateRECIPE_STEP(RECIPE_STEP instance);
    partial void DeleteRECIPE_STEP(RECIPE_STEP instance);
    #endregion
		
		public LYFEDB_DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LYFEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LYFEDB_DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LYFEDB_DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LYFEDB_DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LYFEDB_DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<INGREDIENT> INGREDIENTs
		{
			get
			{
				return this.GetTable<INGREDIENT>();
			}
		}
		
		public System.Data.Linq.Table<INGREDIENTS_PRICE> INGREDIENTS_PRICEs
		{
			get
			{
				return this.GetTable<INGREDIENTS_PRICE>();
			}
		}
		
		public System.Data.Linq.Table<RECIPE_TAG> RECIPE_TAGs
		{
			get
			{
				return this.GetTable<RECIPE_TAG>();
			}
		}
		
		public System.Data.Linq.Table<RECIPE> RECIPEs
		{
			get
			{
				return this.GetTable<RECIPE>();
			}
		}
		
		public System.Data.Linq.Table<LIST_INGREDIENT> LIST_INGREDIENTs
		{
			get
			{
				return this.GetTable<LIST_INGREDIENT>();
			}
		}
		
		public System.Data.Linq.Table<SHOPPING_LIST> SHOPPING_LISTs
		{
			get
			{
				return this.GetTable<SHOPPING_LIST>();
			}
		}
		
		public System.Data.Linq.Table<RECIPE_INGREDIENT> RECIPE_INGREDIENTs
		{
			get
			{
				return this.GetTable<RECIPE_INGREDIENT>();
			}
		}
		
		public System.Data.Linq.Table<RECIPE_STEP> RECIPE_STEPs
		{
			get
			{
				return this.GetTable<RECIPE_STEP>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INGREDIENTS")]
	public partial class INGREDIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _I_ID;
		
		private string _NAME;
		
		private short _QUANTITY;
		
		private string _QUANTITY_NAME;
		
		private EntitySet<INGREDIENTS_PRICE> _INGREDIENTS_PRICEs;
		
		private EntitySet<LIST_INGREDIENT> _LIST_INGREDIENTs;
		
		private EntitySet<RECIPE_INGREDIENT> _RECIPE_INGREDIENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnI_IDChanging(int value);
    partial void OnI_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnQUANTITYChanging(short value);
    partial void OnQUANTITYChanged();
    partial void OnQUANTITY_NAMEChanging(string value);
    partial void OnQUANTITY_NAMEChanged();
    #endregion
		
		public INGREDIENT()
		{
			this._INGREDIENTS_PRICEs = new EntitySet<INGREDIENTS_PRICE>(new Action<INGREDIENTS_PRICE>(this.attach_INGREDIENTS_PRICEs), new Action<INGREDIENTS_PRICE>(this.detach_INGREDIENTS_PRICEs));
			this._LIST_INGREDIENTs = new EntitySet<LIST_INGREDIENT>(new Action<LIST_INGREDIENT>(this.attach_LIST_INGREDIENTs), new Action<LIST_INGREDIENT>(this.detach_LIST_INGREDIENTs));
			this._RECIPE_INGREDIENTs = new EntitySet<RECIPE_INGREDIENT>(new Action<RECIPE_INGREDIENT>(this.attach_RECIPE_INGREDIENTs), new Action<RECIPE_INGREDIENT>(this.detach_RECIPE_INGREDIENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="SmallInt NOT NULL")]
		public short QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_NAME", DbType="NVarChar(50)")]
		public string QUANTITY_NAME
		{
			get
			{
				return this._QUANTITY_NAME;
			}
			set
			{
				if ((this._QUANTITY_NAME != value))
				{
					this.OnQUANTITY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY_NAME = value;
					this.SendPropertyChanged("QUANTITY_NAME");
					this.OnQUANTITY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_INGREDIENTS_PRICE", Storage="_INGREDIENTS_PRICEs", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<INGREDIENTS_PRICE> INGREDIENTS_PRICEs
		{
			get
			{
				return this._INGREDIENTS_PRICEs;
			}
			set
			{
				this._INGREDIENTS_PRICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_LIST_INGREDIENT", Storage="_LIST_INGREDIENTs", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<LIST_INGREDIENT> LIST_INGREDIENTs
		{
			get
			{
				return this._LIST_INGREDIENTs;
			}
			set
			{
				this._LIST_INGREDIENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_RECIPE_INGREDIENT", Storage="_RECIPE_INGREDIENTs", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<RECIPE_INGREDIENT> RECIPE_INGREDIENTs
		{
			get
			{
				return this._RECIPE_INGREDIENTs;
			}
			set
			{
				this._RECIPE_INGREDIENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INGREDIENTS_PRICEs(INGREDIENTS_PRICE entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = this;
		}
		
		private void detach_INGREDIENTS_PRICEs(INGREDIENTS_PRICE entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = null;
		}
		
		private void attach_LIST_INGREDIENTs(LIST_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = this;
		}
		
		private void detach_LIST_INGREDIENTs(LIST_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = null;
		}
		
		private void attach_RECIPE_INGREDIENTs(RECIPE_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = this;
		}
		
		private void detach_RECIPE_INGREDIENTs(RECIPE_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INGREDIENTS_PRICE")]
	public partial class INGREDIENTS_PRICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _I_ID;
		
		private decimal _PRICE;
		
		private string _STORE;
		
		private EntityRef<INGREDIENT> _INGREDIENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnI_IDChanging(int value);
    partial void OnI_IDChanged();
    partial void OnPRICEChanging(decimal value);
    partial void OnPRICEChanged();
    partial void OnSTOREChanging(string value);
    partial void OnSTOREChanged();
    #endregion
		
		public INGREDIENTS_PRICE()
		{
			this._INGREDIENT = default(EntityRef<INGREDIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._INGREDIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="SmallMoney NOT NULL")]
		public decimal PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STORE
		{
			get
			{
				return this._STORE;
			}
			set
			{
				if ((this._STORE != value))
				{
					this.OnSTOREChanging(value);
					this.SendPropertyChanging();
					this._STORE = value;
					this.SendPropertyChanged("STORE");
					this.OnSTOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_INGREDIENTS_PRICE", Storage="_INGREDIENT", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public INGREDIENT INGREDIENT
		{
			get
			{
				return this._INGREDIENT.Entity;
			}
			set
			{
				INGREDIENT previousValue = this._INGREDIENT.Entity;
				if (((previousValue != value) 
							|| (this._INGREDIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INGREDIENT.Entity = null;
						previousValue.INGREDIENTS_PRICEs.Remove(this);
					}
					this._INGREDIENT.Entity = value;
					if ((value != null))
					{
						value.INGREDIENTS_PRICEs.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(int);
					}
					this.SendPropertyChanged("INGREDIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RECIPE_TAGS")]
	public partial class RECIPE_TAG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _R_ID;
		
		private string _TAG;
		
		private EntityRef<RECIPE> _RECIPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnR_IDChanging(int value);
    partial void OnR_IDChanged();
    partial void OnTAGChanging(string value);
    partial void OnTAGChanged();
    #endregion
		
		public RECIPE_TAG()
		{
			this._RECIPE = default(EntityRef<RECIPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int R_ID
		{
			get
			{
				return this._R_ID;
			}
			set
			{
				if ((this._R_ID != value))
				{
					if (this._RECIPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnR_IDChanging(value);
					this.SendPropertyChanging();
					this._R_ID = value;
					this.SendPropertyChanged("R_ID");
					this.OnR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAG", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TAG
		{
			get
			{
				return this._TAG;
			}
			set
			{
				if ((this._TAG != value))
				{
					this.OnTAGChanging(value);
					this.SendPropertyChanging();
					this._TAG = value;
					this.SendPropertyChanged("TAG");
					this.OnTAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_RECIPE_TAG", Storage="_RECIPE", ThisKey="R_ID", OtherKey="R_ID", IsForeignKey=true)]
		public RECIPE RECIPE
		{
			get
			{
				return this._RECIPE.Entity;
			}
			set
			{
				RECIPE previousValue = this._RECIPE.Entity;
				if (((previousValue != value) 
							|| (this._RECIPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECIPE.Entity = null;
						previousValue.RECIPE_TAGs.Remove(this);
					}
					this._RECIPE.Entity = value;
					if ((value != null))
					{
						value.RECIPE_TAGs.Add(this);
						this._R_ID = value.R_ID;
					}
					else
					{
						this._R_ID = default(int);
					}
					this.SendPropertyChanged("RECIPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RECIPES")]
	public partial class RECIPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _R_ID;
		
		private string _NAME;
		
		private string _METHOD;
		
		private System.Nullable<short> _SERVES;
		
		private string _PREPTIME;
		
		private string _PICTURE_LOCATION;
		
		private EntitySet<RECIPE_TAG> _RECIPE_TAGs;
		
		private EntitySet<RECIPE_INGREDIENT> _RECIPE_INGREDIENTs;
		
		private EntitySet<RECIPE_STEP> _RECIPE_STEPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnR_IDChanging(int value);
    partial void OnR_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnMETHODChanging(string value);
    partial void OnMETHODChanged();
    partial void OnSERVESChanging(System.Nullable<short> value);
    partial void OnSERVESChanged();
    partial void OnPREPTIMEChanging(string value);
    partial void OnPREPTIMEChanged();
    partial void OnPICTURE_LOCATIONChanging(string value);
    partial void OnPICTURE_LOCATIONChanged();
    #endregion
		
		public RECIPE()
		{
			this._RECIPE_TAGs = new EntitySet<RECIPE_TAG>(new Action<RECIPE_TAG>(this.attach_RECIPE_TAGs), new Action<RECIPE_TAG>(this.detach_RECIPE_TAGs));
			this._RECIPE_INGREDIENTs = new EntitySet<RECIPE_INGREDIENT>(new Action<RECIPE_INGREDIENT>(this.attach_RECIPE_INGREDIENTs), new Action<RECIPE_INGREDIENT>(this.detach_RECIPE_INGREDIENTs));
			this._RECIPE_STEPs = new EntitySet<RECIPE_STEP>(new Action<RECIPE_STEP>(this.attach_RECIPE_STEPs), new Action<RECIPE_STEP>(this.detach_RECIPE_STEPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int R_ID
		{
			get
			{
				return this._R_ID;
			}
			set
			{
				if ((this._R_ID != value))
				{
					this.OnR_IDChanging(value);
					this.SendPropertyChanging();
					this._R_ID = value;
					this.SendPropertyChanged("R_ID");
					this.OnR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_METHOD", DbType="NVarChar(MAX)")]
		public string METHOD
		{
			get
			{
				return this._METHOD;
			}
			set
			{
				if ((this._METHOD != value))
				{
					this.OnMETHODChanging(value);
					this.SendPropertyChanging();
					this._METHOD = value;
					this.SendPropertyChanged("METHOD");
					this.OnMETHODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERVES", DbType="SmallInt")]
		public System.Nullable<short> SERVES
		{
			get
			{
				return this._SERVES;
			}
			set
			{
				if ((this._SERVES != value))
				{
					this.OnSERVESChanging(value);
					this.SendPropertyChanging();
					this._SERVES = value;
					this.SendPropertyChanged("SERVES");
					this.OnSERVESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPTIME", DbType="NChar(10)")]
		public string PREPTIME
		{
			get
			{
				return this._PREPTIME;
			}
			set
			{
				if ((this._PREPTIME != value))
				{
					this.OnPREPTIMEChanging(value);
					this.SendPropertyChanging();
					this._PREPTIME = value;
					this.SendPropertyChanged("PREPTIME");
					this.OnPREPTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PICTURE_LOCATION", DbType="NVarChar(255)")]
		public string PICTURE_LOCATION
		{
			get
			{
				return this._PICTURE_LOCATION;
			}
			set
			{
				if ((this._PICTURE_LOCATION != value))
				{
					this.OnPICTURE_LOCATIONChanging(value);
					this.SendPropertyChanging();
					this._PICTURE_LOCATION = value;
					this.SendPropertyChanged("PICTURE_LOCATION");
					this.OnPICTURE_LOCATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_RECIPE_TAG", Storage="_RECIPE_TAGs", ThisKey="R_ID", OtherKey="R_ID")]
		public EntitySet<RECIPE_TAG> RECIPE_TAGs
		{
			get
			{
				return this._RECIPE_TAGs;
			}
			set
			{
				this._RECIPE_TAGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_RECIPE_INGREDIENT", Storage="_RECIPE_INGREDIENTs", ThisKey="R_ID", OtherKey="R_ID")]
		public EntitySet<RECIPE_INGREDIENT> RECIPE_INGREDIENTs
		{
			get
			{
				return this._RECIPE_INGREDIENTs;
			}
			set
			{
				this._RECIPE_INGREDIENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_RECIPE_STEP", Storage="_RECIPE_STEPs", ThisKey="R_ID", OtherKey="R_ID")]
		public EntitySet<RECIPE_STEP> RECIPE_STEPs
		{
			get
			{
				return this._RECIPE_STEPs;
			}
			set
			{
				this._RECIPE_STEPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RECIPE_TAGs(RECIPE_TAG entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE = this;
		}
		
		private void detach_RECIPE_TAGs(RECIPE_TAG entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE = null;
		}
		
		private void attach_RECIPE_INGREDIENTs(RECIPE_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE = this;
		}
		
		private void detach_RECIPE_INGREDIENTs(RECIPE_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE = null;
		}
		
		private void attach_RECIPE_STEPs(RECIPE_STEP entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE = this;
		}
		
		private void detach_RECIPE_STEPs(RECIPE_STEP entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIST_INGREDIENTS")]
	public partial class LIST_INGREDIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _S_ID;
		
		private int _I_ID;
		
		private int _I_QUANTITY;
		
		private EntityRef<INGREDIENT> _INGREDIENT;
		
		private EntityRef<SHOPPING_LIST> _SHOPPING_LIST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_IDChanging(int value);
    partial void OnS_IDChanged();
    partial void OnI_IDChanging(int value);
    partial void OnI_IDChanged();
    partial void OnI_QUANTITYChanging(int value);
    partial void OnI_QUANTITYChanged();
    #endregion
		
		public LIST_INGREDIENT()
		{
			this._INGREDIENT = default(EntityRef<INGREDIENT>);
			this._SHOPPING_LIST = default(EntityRef<SHOPPING_LIST>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int S_ID
		{
			get
			{
				return this._S_ID;
			}
			set
			{
				if ((this._S_ID != value))
				{
					if (this._SHOPPING_LIST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_IDChanging(value);
					this.SendPropertyChanging();
					this._S_ID = value;
					this.SendPropertyChanged("S_ID");
					this.OnS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._INGREDIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_QUANTITY", DbType="Int NOT NULL")]
		public int I_QUANTITY
		{
			get
			{
				return this._I_QUANTITY;
			}
			set
			{
				if ((this._I_QUANTITY != value))
				{
					this.OnI_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._I_QUANTITY = value;
					this.SendPropertyChanged("I_QUANTITY");
					this.OnI_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_LIST_INGREDIENT", Storage="_INGREDIENT", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public INGREDIENT INGREDIENT
		{
			get
			{
				return this._INGREDIENT.Entity;
			}
			set
			{
				INGREDIENT previousValue = this._INGREDIENT.Entity;
				if (((previousValue != value) 
							|| (this._INGREDIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INGREDIENT.Entity = null;
						previousValue.LIST_INGREDIENTs.Remove(this);
					}
					this._INGREDIENT.Entity = value;
					if ((value != null))
					{
						value.LIST_INGREDIENTs.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(int);
					}
					this.SendPropertyChanged("INGREDIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SHOPPING_LIST_LIST_INGREDIENT", Storage="_SHOPPING_LIST", ThisKey="S_ID", OtherKey="S_ID", IsForeignKey=true)]
		public SHOPPING_LIST SHOPPING_LIST
		{
			get
			{
				return this._SHOPPING_LIST.Entity;
			}
			set
			{
				SHOPPING_LIST previousValue = this._SHOPPING_LIST.Entity;
				if (((previousValue != value) 
							|| (this._SHOPPING_LIST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SHOPPING_LIST.Entity = null;
						previousValue.LIST_INGREDIENTs.Remove(this);
					}
					this._SHOPPING_LIST.Entity = value;
					if ((value != null))
					{
						value.LIST_INGREDIENTs.Add(this);
						this._S_ID = value.S_ID;
					}
					else
					{
						this._S_ID = default(int);
					}
					this.SendPropertyChanged("SHOPPING_LIST");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SHOPPING_LISTS")]
	public partial class SHOPPING_LIST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _S_ID;
		
		private string _S_NAME;
		
		private System.DateTime _CREATE_DATE;
		
		private EntitySet<LIST_INGREDIENT> _LIST_INGREDIENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_IDChanging(int value);
    partial void OnS_IDChanged();
    partial void OnS_NAMEChanging(string value);
    partial void OnS_NAMEChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    #endregion
		
		public SHOPPING_LIST()
		{
			this._LIST_INGREDIENTs = new EntitySet<LIST_INGREDIENT>(new Action<LIST_INGREDIENT>(this.attach_LIST_INGREDIENTs), new Action<LIST_INGREDIENT>(this.detach_LIST_INGREDIENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int S_ID
		{
			get
			{
				return this._S_ID;
			}
			set
			{
				if ((this._S_ID != value))
				{
					this.OnS_IDChanging(value);
					this.SendPropertyChanging();
					this._S_ID = value;
					this.SendPropertyChanged("S_ID");
					this.OnS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string S_NAME
		{
			get
			{
				return this._S_NAME;
			}
			set
			{
				if ((this._S_NAME != value))
				{
					this.OnS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._S_NAME = value;
					this.SendPropertyChanged("S_NAME");
					this.OnS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="Date NOT NULL")]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SHOPPING_LIST_LIST_INGREDIENT", Storage="_LIST_INGREDIENTs", ThisKey="S_ID", OtherKey="S_ID")]
		public EntitySet<LIST_INGREDIENT> LIST_INGREDIENTs
		{
			get
			{
				return this._LIST_INGREDIENTs;
			}
			set
			{
				this._LIST_INGREDIENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIST_INGREDIENTs(LIST_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.SHOPPING_LIST = this;
		}
		
		private void detach_LIST_INGREDIENTs(LIST_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.SHOPPING_LIST = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RECIPE_INGREDIENTS")]
	public partial class RECIPE_INGREDIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _R_ID;
		
		private int _I_ID;
		
		private System.Nullable<short> _QUANTITY;
		
		private EntityRef<INGREDIENT> _INGREDIENT;
		
		private EntityRef<RECIPE> _RECIPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnR_IDChanging(int value);
    partial void OnR_IDChanged();
    partial void OnI_IDChanging(int value);
    partial void OnI_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<short> value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public RECIPE_INGREDIENT()
		{
			this._INGREDIENT = default(EntityRef<INGREDIENT>);
			this._RECIPE = default(EntityRef<RECIPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int R_ID
		{
			get
			{
				return this._R_ID;
			}
			set
			{
				if ((this._R_ID != value))
				{
					if (this._RECIPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnR_IDChanging(value);
					this.SendPropertyChanging();
					this._R_ID = value;
					this.SendPropertyChanged("R_ID");
					this.OnR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._INGREDIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="SmallInt")]
		public System.Nullable<short> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_RECIPE_INGREDIENT", Storage="_INGREDIENT", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public INGREDIENT INGREDIENT
		{
			get
			{
				return this._INGREDIENT.Entity;
			}
			set
			{
				INGREDIENT previousValue = this._INGREDIENT.Entity;
				if (((previousValue != value) 
							|| (this._INGREDIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INGREDIENT.Entity = null;
						previousValue.RECIPE_INGREDIENTs.Remove(this);
					}
					this._INGREDIENT.Entity = value;
					if ((value != null))
					{
						value.RECIPE_INGREDIENTs.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(int);
					}
					this.SendPropertyChanged("INGREDIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_RECIPE_INGREDIENT", Storage="_RECIPE", ThisKey="R_ID", OtherKey="R_ID", IsForeignKey=true)]
		public RECIPE RECIPE
		{
			get
			{
				return this._RECIPE.Entity;
			}
			set
			{
				RECIPE previousValue = this._RECIPE.Entity;
				if (((previousValue != value) 
							|| (this._RECIPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECIPE.Entity = null;
						previousValue.RECIPE_INGREDIENTs.Remove(this);
					}
					this._RECIPE.Entity = value;
					if ((value != null))
					{
						value.RECIPE_INGREDIENTs.Add(this);
						this._R_ID = value.R_ID;
					}
					else
					{
						this._R_ID = default(int);
					}
					this.SendPropertyChanged("RECIPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RECIPE_STEPS")]
	public partial class RECIPE_STEP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _R_ID;
		
		private short _STEP_ID;
		
		private string _STEP_TEXT;
		
		private EntityRef<RECIPE> _RECIPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnR_IDChanging(int value);
    partial void OnR_IDChanged();
    partial void OnSTEP_IDChanging(short value);
    partial void OnSTEP_IDChanged();
    partial void OnSTEP_TEXTChanging(string value);
    partial void OnSTEP_TEXTChanged();
    #endregion
		
		public RECIPE_STEP()
		{
			this._RECIPE = default(EntityRef<RECIPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int R_ID
		{
			get
			{
				return this._R_ID;
			}
			set
			{
				if ((this._R_ID != value))
				{
					if (this._RECIPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnR_IDChanging(value);
					this.SendPropertyChanging();
					this._R_ID = value;
					this.SendPropertyChanged("R_ID");
					this.OnR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STEP_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short STEP_ID
		{
			get
			{
				return this._STEP_ID;
			}
			set
			{
				if ((this._STEP_ID != value))
				{
					this.OnSTEP_IDChanging(value);
					this.SendPropertyChanging();
					this._STEP_ID = value;
					this.SendPropertyChanged("STEP_ID");
					this.OnSTEP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STEP_TEXT", DbType="NVarChar(1000)")]
		public string STEP_TEXT
		{
			get
			{
				return this._STEP_TEXT;
			}
			set
			{
				if ((this._STEP_TEXT != value))
				{
					this.OnSTEP_TEXTChanging(value);
					this.SendPropertyChanging();
					this._STEP_TEXT = value;
					this.SendPropertyChanged("STEP_TEXT");
					this.OnSTEP_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_RECIPE_STEP", Storage="_RECIPE", ThisKey="R_ID", OtherKey="R_ID", IsForeignKey=true)]
		public RECIPE RECIPE
		{
			get
			{
				return this._RECIPE.Entity;
			}
			set
			{
				RECIPE previousValue = this._RECIPE.Entity;
				if (((previousValue != value) 
							|| (this._RECIPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECIPE.Entity = null;
						previousValue.RECIPE_STEPs.Remove(this);
					}
					this._RECIPE.Entity = value;
					if ((value != null))
					{
						value.RECIPE_STEPs.Add(this);
						this._R_ID = value.R_ID;
					}
					else
					{
						this._R_ID = default(int);
					}
					this.SendPropertyChanged("RECIPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
